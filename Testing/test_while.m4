; vvvvv
include(`FIRST.M4')dnl
; ^^^^^
ORG 0x8000
    ld  hl, stack_test
    push hl
    INIT(60000)
    PUSH2( 5,-5) CALL(test)
    PUSH2( 5, 5) CALL(test)
    PUSH2(-5,-5) CALL(test)
    PUSH2(-5, 5) CALL(test)
    PRINT({"RAS:"})
    exx
    push HL
    exx
    pop HL
    DUP_UDOT
    STOP

COLON(test)
    OVER DOT DUP DOT CR 
    BEGIN  _2DUP EQ WHILE PRINT( {"=,"}) BREAK REPEAT
    BEGIN  _2DUP_EQ_WHILE PRINT( {"=,"}) BREAK REPEAT
    BEGIN  _2DUP NE WHILE PRINT({"<>,"}) BREAK REPEAT
    BEGIN  _2DUP_NE_WHILE PRINT({"<>,"}) BREAK REPEAT
    BEGIN  _2DUP LT WHILE PRINT( {"<,"}) BREAK REPEAT
    BEGIN  _2DUP_LT_WHILE PRINT( {"<,"}) BREAK REPEAT
    BEGIN  _2DUP LE WHILE PRINT({"<=,"}) BREAK REPEAT
    BEGIN  _2DUP_LE_WHILE PRINT({"<=,"}) BREAK REPEAT
    BEGIN  _2DUP GT WHILE PRINT( {">,"}) BREAK REPEAT
    BEGIN  _2DUP_GT_WHILE PRINT( {">,"}) BREAK REPEAT
    BEGIN  _2DUP GE WHILE PRINT({">=,"}) BREAK REPEAT
    BEGIN  _2DUP_GE_WHILE PRINT({">=,"}) BREAK REPEAT    
    CR
    OVER UDOT DUP UDOT CR 
    BEGIN _2DUP UEQ WHILE PRINT( {"=,"}) BREAK REPEAT
    BEGIN _2DUP_UEQ_WHILE PRINT( {"=,"}) BREAK REPEAT
    BEGIN _2DUP UNE WHILE PRINT({"<>,"}) BREAK REPEAT
    BEGIN _2DUP_UNE_WHILE PRINT({"<>,"}) BREAK REPEAT
    BEGIN _2DUP ULT WHILE PRINT( {"<,"}) BREAK REPEAT
    BEGIN _2DUP_ULT_WHILE PRINT( {"<,"}) BREAK REPEAT
    BEGIN _2DUP ULE WHILE PRINT({"<=,"}) BREAK REPEAT
    BEGIN _2DUP_ULE_WHILE PRINT({"<=,"}) BREAK REPEAT
    BEGIN _2DUP UGT WHILE PRINT( {">,"}) BREAK REPEAT
    BEGIN _2DUP_UGT_WHILE PRINT( {">,"}) BREAK REPEAT
    BEGIN _2DUP UGE WHILE PRINT({">=,"}) BREAK REPEAT
    BEGIN _2DUP_UGE_WHILE PRINT({">=,"}) BREAK REPEAT    
    CR
    _2DROP
SEMICOLON
    
SCOLON(stack_test)
    PRINT({0xD, "Data stack OK!", 0xD})    
SSEMICOLON

include({LAST.M4})
