include(`../M4/FIRST.M4')dnl 
ORG 0x8000
INIT(60000)
PRINT({"enter 1million or 32million", 0xD})
RCALL(_1million)
STOP

;# ( Forth nesting (NEXT) Benchmark     cas20101204 )
RCOLON(bottom) RSEMICOLON    
RCOLON(_1st)  RCALL(bottom) RCALL(bottom) RSEMICOLON   RCOLON(_2nd)  RCALL(_1st)  RCALL(_1st)  RSEMICOLON   RCOLON(_3rd)  RCALL(_2nd)  RCALL(_2nd)  RSEMICOLON
RCOLON(_4th)  RCALL(_3rd)   RCALL(_3rd)   RSEMICOLON   RCOLON(_5th)  RCALL(_4th)  RCALL(_4th)  RSEMICOLON   RCOLON(_6th)  RCALL(_5th)  RCALL(_5th)  RSEMICOLON
RCOLON(_7th)  RCALL(_6th)   RCALL(_6th)   RSEMICOLON   RCOLON(_8th)  RCALL(_7th)  RCALL(_7th)  RSEMICOLON   RCOLON(_9th)  RCALL(_8th)  RCALL(_8th)  RSEMICOLON
RCOLON(_10th) RCALL(_9th)   RCALL(_9th)   RSEMICOLON   RCOLON(_11th) RCALL(_10th) RCALL(_10th) RSEMICOLON   RCOLON(_12th) RCALL(_11th) RCALL(_11th) RSEMICOLON
RCOLON(_13th) RCALL(_12th)  RCALL(_12th)  RSEMICOLON   RCOLON(_14th) RCALL(_13th) RCALL(_13th) RSEMICOLON   RCOLON(_15th) RCALL(_14th) RCALL(_14th) RSEMICOLON
RCOLON(_16th) RCALL(_15th)  RCALL(_15th)  RSEMICOLON   RCOLON(_17th) RCALL(_16th) RCALL(_16th) RSEMICOLON   RCOLON(_18th) RCALL(_17th) RCALL(_17th) RSEMICOLON
RCOLON(_19th) RCALL(_18th)  RCALL(_18th)  RSEMICOLON   RCOLON(_20th) RCALL(_19th) RCALL(_19th) RSEMICOLON   RCOLON(_21th) RCALL(_20th) RCALL(_20th) RSEMICOLON
RCOLON(_22th) RCALL(_21th)  RCALL(_21th)  RSEMICOLON   RCOLON(_23th) RCALL(_22th) RCALL(_22th) RSEMICOLON   RCOLON(_24th) RCALL(_23th) RCALL(_23th) RSEMICOLON
RCOLON(_25th) RCALL(_24th)  RCALL(_24th)  RSEMICOLON            

RCOLON(_32million)  PRINT({"32 million nest/unnest operations", 0xD}) RCALL(_25th) RSEMICOLON
RCOLON(_1million)   PRINT({" 1 million nest/unnest operations", 0xD}) RCALL(_20th) RSEMICOLON
